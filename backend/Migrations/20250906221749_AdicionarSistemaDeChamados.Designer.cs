// <auto-generated />
using System;
using ChatbotApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ChatbotApiNova.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250906221749_AdicionarSistemaDeChamados")]
    partial class AdicionarSistemaDeChamados
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.7.24405.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ChatbotApi.Models.Chamado", b =>
                {
                    b.Property<int>("IdChamado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdChamado"));

                    b.Property<DateTime>("DataAbertura")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataFechamento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("IdTecnicoResponsavel")
                        .HasColumnType("integer");

                    b.Property<int>("IdUsuarioAbertura")
                        .HasColumnType("integer");

                    b.Property<string>("Prioridade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdChamado");

                    b.HasIndex("IdTecnicoResponsavel");

                    b.HasIndex("IdUsuarioAbertura");

                    b.ToTable("Chamados");
                });

            modelBuilder.Entity("ChatbotApi.Models.Comentario", b =>
                {
                    b.Property<int>("IdComentario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdComentario"));

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdChamado")
                        .HasColumnType("integer");

                    b.Property<int>("IdUsuarioCriador")
                        .HasColumnType("integer");

                    b.Property<int>("UsuarioCriadorIdUsuario")
                        .HasColumnType("integer");

                    b.HasKey("IdComentario");

                    b.HasIndex("IdChamado");

                    b.HasIndex("UsuarioCriadorIdUsuario");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("ChatbotApi.Models.Tecnico", b =>
                {
                    b.Property<int>("IdTecnico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdTecnico"));

                    b.Property<bool>("Disponivel")
                        .HasColumnType("boolean");

                    b.Property<string>("Especialidade")
                        .HasColumnType("text");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("integer");

                    b.HasKey("IdTecnico");

                    b.HasIndex("IdUsuario")
                        .IsUnique();

                    b.ToTable("Tecnicos");
                });

            modelBuilder.Entity("ChatbotApi.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("EmailConfirmado")
                        .HasColumnType("boolean");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ResetPasswordToken")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ResetPasswordTokenExpires")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TipoUsuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TokenConfirmacaoEmail")
                        .HasColumnType("text");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ChatbotApi.Models.Chamado", b =>
                {
                    b.HasOne("ChatbotApi.Models.Tecnico", "TecnicoResponsavel")
                        .WithMany()
                        .HasForeignKey("IdTecnicoResponsavel")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ChatbotApi.Models.Usuario", "UsuarioAbertura")
                        .WithMany()
                        .HasForeignKey("IdUsuarioAbertura")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TecnicoResponsavel");

                    b.Navigation("UsuarioAbertura");
                });

            modelBuilder.Entity("ChatbotApi.Models.Comentario", b =>
                {
                    b.HasOne("ChatbotApi.Models.Chamado", "Chamado")
                        .WithMany("Comentarios")
                        .HasForeignKey("IdChamado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChatbotApi.Models.Usuario", "UsuarioCriador")
                        .WithMany()
                        .HasForeignKey("UsuarioCriadorIdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chamado");

                    b.Navigation("UsuarioCriador");
                });

            modelBuilder.Entity("ChatbotApi.Models.Tecnico", b =>
                {
                    b.HasOne("ChatbotApi.Models.Usuario", "Usuario")
                        .WithOne()
                        .HasForeignKey("ChatbotApi.Models.Tecnico", "IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ChatbotApi.Models.Chamado", b =>
                {
                    b.Navigation("Comentarios");
                });
#pragma warning restore 612, 618
        }
    }
}
